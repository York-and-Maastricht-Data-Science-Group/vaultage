[%
	import 'util.eol';
	
	var t : Template = TemplateFactory.load("class.egl");
	var outputRoot = t.getOutputRoot(); 
	var packageName = t.getBasePackage();
	
	TemplateFactory.setOutputRoot(outputRoot);

    for (class in EClass.allInstances()) { 
      if (class.hasVaultAnnotation()){
      	// create the vault class
      	t.createClass(packageName, class.filename(), class, true);
      	t.createBaseClass(packageName, class.baseFilename(), class);
      	t.createRemoteRequester(packageName, class.baseFilename(), class);
      	
      	// create all handlers for all its public operations
      	for (eOperation in class.getPublicEOperations()){
      		t.createHandler(packageName, eOperation);
      	} 
      } else {
      	t.createClass(packageName, class.filename(), class, false);
      }
    }

operation Template getJavaSourcePath(): String{
	return "../src/";
}

operation Template getBasePackage(): String{
	var eAnnotation = EAnnotation.allInstances.selectOne(a | a.source == "http://www.eclipse.org/emf/2002/GenModel");
	return eAnnotation.details.selectOne( d | d.key = "basePackage").value;
}

operation Template getOutputRoot() : String {
	return  self.getJavaSourcePath() + self.getBasePackage().replace("\\.", "/"); 
}

operation Template createClass(packageName : String, filename : String, class : EClass, isVault : Boolean) {
    var t : Template = TemplateFactory.load("class.egl");
	
	t.populate("packageName", packageName);    
    t.populate("class", class);
    if (isVault) {
    	t.populate("parentClass", "extends " + class.name + "Base");
    } else {
    	t.populate("parentClass", "");
    }
    t.generate(filename);
  }
  
  operation Template createBaseClass(packageName : String, baseFilename : String, class : EClass) {
    var t : Template = TemplateFactory.load("baseclass.egl");
	
	t.populate("packageName", packageName);    
    t.populate("class", class);
    
    t.generate(baseFilename);
  }
  
   operation Template createRemoteRequester(packageName : String, baseFilename : String, class : EClass) {
    var t : Template = TemplateFactory.load("remoterequester.egl");
	
	t.populate("packageName", packageName);    
    t.populate("class", class);
    
    t.generate("RemoteRequester.java");
  }
  
  operation Template createHandler(packageName : String, eOperation : EOperation) {
    var t : Template;
   
    t = TemplateFactory.load("requesthandler.egl");
	t.populate("packageName", packageName);    
    t.populate("eOperation", eOperation);
    t.generate(eOperation.getClassRequestHandlerName() + ".java");
    
    t = TemplateFactory.load("responsehandler.egl");
	t.populate("packageName", packageName);    
    t.populate("eOperation", eOperation);
    t.generate(eOperation.getClassResponseHandlerName() + ".java");
  }
  
  
  
%]