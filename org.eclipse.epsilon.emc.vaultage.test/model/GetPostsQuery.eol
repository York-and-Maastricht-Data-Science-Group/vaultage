var localVault = FairnetVault.all.first();
var remoteVaults = Sequence{};

for (friend in localVault.friends){
    var friendVault = new RemoteFairnetVault;
    friendVault.localVault = localVault;
    friendVault.remotePublicKey = friend.publicKey;
	remoteVaults.add(friendVault);
}

var allPosts = Sequence{};

var post = remoteVaults.first().posts.second();
"post: ".print(); post.println();

var condition = true;
var endString = "01";

//// request remoteVaults' and localVault's Posts in different statements
//var bobsFriendsPosts = remoteVaults.parallelCollect( rv| rv.posts).flatten();
//var bobsFriendsPosts = remoteVaults.parallelCollect( rv| rv.posts.parallelSelect(p | p.isPublic = condition
//	and p.content.endsWith(endString))).flatten();
//var bobsPosts = localVault.posts.parallelSelect(p | p.isPublic = condition and p.content.endsWith(endString)).flatten();
//allPosts.addAll(bobsFriendsPosts);
//allPosts.addAll(bobsPosts);

//// request remoteVaults' and localVault's Posts in ONE statement
var allVaults = Sequence{};
allVaults.addAll(remoteVaults);
allVaults.add(localVault);
allPosts = allVaults.parallelCollect( rv| rv.posts.parallelSelect(p | p.isPublic = condition
	and p.content.endsWith(endString))).flatten();


return allPosts;


			