[% import 'Util.eol'; %]
package [%=packageName%];

import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

[% for (eClass in EClass.allInstances){ %][% if (not eClass.hasVaultAnnotation()) { %]
// import [%=packageName%].[%=eClass.name%];
[% 	} %][% }%]
// import [%=packageName%].[%=class.name%]Base;

public class [%=class.name%] [%=parentClass%] {
[% for (feature in class.eStructuralFeatures){ %]
	private [%=feature.getType()%] [%=feature.name%] = new [%= feature.getTypeInstance()%]();
[%	} %]

	public [%=class.name%]() throws Exception {
		super();
	}
	
	public [%=class.name%](String address, int port) throws Exception {
		super(address, port);
	}
	
	// getter
[% for (feature in class.eStructuralFeatures){ %]
	public [%=feature.getType()%] get[%=feature.name.firstToUpperCase()%]() {
		return this.[%=feature.name%];
	}
[%	} %]

	// setter
[% for (feature in class.eStructuralFeatures){ %]
	public void set[%=feature.name.firstToUpperCase()%]([%=feature.getType()%] [%=feature.name%]) {
		this.[%=feature.name%] = [%=feature.name%];
	}
[%	} %]

	// operations
[% for (eOperation in class.eOperations){ %]
	[%= eOperation.getOverride() %]
	public void [%= eOperation.name %]([%=eOperation.getRequesterParams()%]) throws Exception {
		throw new Exception();
	}
	
[% } %]		
}