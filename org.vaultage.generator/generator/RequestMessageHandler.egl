[% 	import 'Util.eol'; %]
[% 	
	var classes = ePackage.getVaultClasses();
%]
package [%=packageName%];

import java.util.ArrayList;
import java.util.List;

import org.vaultage.core.RequestMessageHandler;
import org.vaultage.core.Vaultage;
import org.vaultage.core.VaultageMessage;

public class [%=appName%]RequestMessageHandler extends RequestMessageHandler {

	@Override
	public void process(VaultageMessage message, String senderPublicKey, Object vault) throws Exception {
[% var count = 1; %]	
[% for (class in classes) { %]
	[% if (count > 1) { %] 
	else 
	[% } %]
	if (vault instanceof [%=class.name%]){
		[%=class.name%] [%=class.name.firstToLowerCase()%] = ([%=class.name%]) vault;
		[%=class.name%] requester = new [%=class.name%]();
		requester.setPublicKey(senderPublicKey);
		
		String operation = message.getOperation();
		String messageToken = message.getToken();

		switch (operation) {
[% for (eOperation in class.eOperations){ %]
			case "[%=eOperation.name%]": {
[% for (eParameter in eOperation.eParameters){ %]
				[%=eParameter.getTypeName()%] [%=eParameter.name%] = Vaultage.deserialise(message.getValue("[%=eParameter.name%]"), [%=eParameter.getTypeImplementation()%].class);
[% } %]
				[%=class.name.firstToLowerCase()%].[%=eOperation.name%](requester, messageToken[%= eOperation.getParamsWithoutTypes() %]);
				}
				break;
[% } %]			default:
				throw new Exception("Operation " + operation + " is not supported!");
		}
	}
[% 
		count = count + 1;
	} %]
	}
}
