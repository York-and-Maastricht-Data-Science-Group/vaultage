[% import 'Util.eol'; %]
[% 	var classes = ePackage.getVaultClasses(); %]
package [%=packageName%];

import java.net.InetSocketAddress;
import java.security.NoSuchAlgorithmException;
import java.util.List;

import org.vaultage.core.Vault;
import org.vaultage.wallet.PaymentInformation;

public abstract class [%=class.getBaseName()%] extends Vault {

	public [%=class.getBaseName()%]() throws Exception {
		super();
	}
	
	public [%=class.getBaseName()%](String address, int port) throws Exception {
		super(address, port);
	}
	
	protected void initialiseMessageHandlers() throws NoSuchAlgorithmException {
		vaultage.setRequestMessageHandler(new [%=appName%]RequestMessageHandler());
		vaultage.setResponseMessageHandler(new [%=appName%]ResponseMessageHandler());
	}
		
	// operations
[% for (eOperation in class.eOperations){ %]
	[% var isStreamed = (eOperation.eAnnotations.selectOne(e | e.source = "stream") <> null )? true : false; %]
	[% if (not isStreamed) { %]
		[%	var eAnnotation = eOperation.eAnnotations.selectOne(e | e.source = "vaultage");
		if (eAnnotation <> null and eAnnotation.details.one(e | e.key = "monetised" and e.value = "true")) { %]
		public abstract void [%= eOperation.name %]([%=eOperation.getRequesterParams()%], PaymentInformation paymentInformation) throws Exception;
		[% } else { %]
		public abstract void [%= eOperation.name %]([%=eOperation.getRequesterParams()%]) throws Exception;
		[% } %]
	[% } else { %]
		[%	var eAnnotation = eOperation.eAnnotations.selectOne(e | e.source = "vaultage");
		if (eAnnotation <> null and eAnnotation.details.one(e | e.key = "monetised" and e.value = "true")) { %]
		public abstract void [%= eOperation.name %]([%=eOperation.getRequesterStreamParams()%], PaymentInformation paymentInformation) throws Exception;
		[% } else { %]
		public abstract void [%= eOperation.name %]([%=eOperation.getRequesterStreamParams()%]) throws Exception;
		[% } %]
	[% } %]
[% } %]
}
